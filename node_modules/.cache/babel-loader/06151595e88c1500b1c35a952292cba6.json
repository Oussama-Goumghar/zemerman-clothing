{"ast":null,"code":"import _objectSpread from \"F:\\\\react-native\\\\zemerman-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDH7dLWJEdMPVQVgA9II6dNc_pwtbJRuyY\",\n  authDomain: \"zemerman-db.firebaseapp.com\",\n  databaseURL: \"https://zemerman-db.firebaseio.com\",\n  projectId: \"zemerman-db\",\n  storageBucket: \"zemerman-db.appspot.com\",\n  messagingSenderId: \"764824940253\",\n  appId: \"1:764824940253:web:ad46c51e4b45acd5973534\",\n  measurementId: \"G-TLPN4RLGVE\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createAt\n      }, additionalData));\n    } catch (error) {}\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["F:/react-native/zemerman-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,6BAFH;AAGTC,EAAAA,WAAW,EAAE,oCAHJ;AAITC,EAAAA,SAAS,EAAE,aAJF;AAKTC,EAAAA,aAAa,EAAE,yBALN;AAMTC,EAAAA,iBAAiB,EAAE,cANV;AAOTC,EAAAA,KAAK,EAAE,2CAPE;AAQTC,EAAAA,aAAa,EAAE;AARN,CAAb;AAWA,OAAO,MAAMC,yBAAyB,GAAC,OAAOC,QAAP,EAAgBC,cAAhB,KAAiC;AACpE,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAEC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAf;AACA,QAAMC,QAAQ,GAAE,MAAMJ,OAAO,CAACK,GAAR,EAAtB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACXC,WADW,GACQT,QADR,CACXS,WADW;AAAA,UACCC,KADD,GACQV,QADR,CACCU,KADD;AAElB,UAAMC,QAAQ,GAAC,IAAIC,IAAJ,EAAf;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR;AACFJ,QAAAA,WADE;AAEFC,QAAAA,KAFE;AAGFC,QAAAA;AAHE,SAICV,cAJD,EAAN;AAMH,KAPD,CAOC,OAAOa,KAAP,EAAc,CAEd;AACJ;AAEJ,CArBM;AAuBPzB,QAAQ,CAAC0B,aAAT,CAAuBzB,MAAvB;AAEA,OAAO,MAAM0B,IAAI,GAAC3B,QAAQ,CAAC2B,IAAT,EAAX;AACP,OAAO,MAAMb,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB;AAEP,MAAMc,QAAQ,GAAC,IAAI5B,QAAQ,CAAC2B,IAAT,CAAcE,kBAAlB,EAAf;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAG;AAAX,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAE,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AAEP,eAAe5B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyDH7dLWJEdMPVQVgA9II6dNc_pwtbJRuyY\",\r\n    authDomain: \"zemerman-db.firebaseapp.com\",\r\n    databaseURL: \"https://zemerman-db.firebaseio.com\",\r\n    projectId: \"zemerman-db\",\r\n    storageBucket: \"zemerman-db.appspot.com\",\r\n    messagingSenderId: \"764824940253\",\r\n    appId: \"1:764824940253:web:ad46c51e4b45acd5973534\",\r\n    measurementId: \"G-TLPN4RLGVE\"\r\n};\r\n\r\nexport const createUserProfileDocument=async (userAuth,additionalData)=>{\r\n    if (!userAuth) return;\r\n    const userRef= firestore.doc(`users/${userAuth.uid}`);\r\n    const snapShot= await userRef.get();\r\n\r\n    if (!snapShot.exists) {\r\n        const {displayName,email}=userAuth;\r\n        const createAt=new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createAt,\r\n                ...additionalData\r\n            })\r\n        }catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth=firebase.auth();\r\nexport const firestore=firebase.firestore();\r\n\r\nconst provider=new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt : 'select_account' });\r\nexport const signInWithGoogle= () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n\r\n"]},"metadata":{},"sourceType":"module"}